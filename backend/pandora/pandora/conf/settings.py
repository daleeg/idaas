"""
Django settings for pandora project.

Generated by 'django-admin startproject' using Django 3.0.3

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os
import sys
from corsheaders.defaults import default_headers

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '+z+r%m^k7m(^_b15(u76_cahi^qxj@n53wjjrla=892l$@u&#6'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('DEBUG', 'YES').lower() in ('on', 'true', 'y', 'yes')

ALLOWED_HOSTS = []
AUTH_USER_MODEL = 'pandora.User'
SILK = False
# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'rest_framework',
    'rest_framework.authtoken',
    'django_filters',
    'rest_framework_swagger',
    'corsheaders',
    'pandora',
    # 'debug_toolbar.apps.DebugToolbarConfig',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    # 'django.middleware.locale.LocaleMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

if SILK:
    INSTALLED_APPS += ['silk']
    MIDDLEWARE += ['silk.middleware.SilkyMiddleware']
SESSION_ENGINE = 'django.contrib.sessions.backends.cached_db'
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_CREDENTIALS = True
CORS_ALLOW_METHODS = (
    'GET',
    'POST',
    'PUT',
    'PATCH',
    'DELETE',
    'OPTIONS'
)
SCHOOL_HEADER = 'X_CUSTOM_HEADER_3SCHOOL'
SCHOOL_HEADER_LOWER = 'X-Custom-Header-3School'

APP_HEADER = 'X_CUSTOM_HEADER_3APP'
APP_HEADER_LOWER = 'X-Custom-Header-3App'

CORS_ALLOW_HEADERS = default_headers + (
    SCHOOL_HEADER_LOWER,
    APP_HEADER_LOWER,
)
CORS_EXPOSE_HEADERS = (
    SCHOOL_HEADER,
    APP_HEADER,
)
SESSION_SAVE_EVERY_REQUEST = False
SESSION_COOKIE_AGE = 60 * 60 * 24
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
ROOT_URLCONF = 'pandora.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
            'libraries': {
                'staticfiles': 'django.templatetags.static',
            },
        },

    },
]
WSGI_APPLICATION = 'pandora.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

REST_FRAMEWORK = {
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    ),
    'DEFAULT_PERMISSION_CLASSES': ('rest_framework.permissions.AllowAny',),
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'DEFAULT_SCHEMA_CLASS': 'rest_framework.schemas.coreapi.AutoSchema',
    'PAGE_SIZE': 65535,
    'MAX_PAGE_SIZE': 65535,
    'DEFAULT_VERSION': 'v1',
    'ALLOWED_VERSIONS': ['v1', 'v2'],
    'VERSION_PARAM': 'version'
}

SWAGGER_SETTINGS = {
    'USE_SESSION_AUTH': True,
    'SECURITY_DEFINITIONS': {
        'basic': {
            'type': 'basic'
        }
    },
    'DOC_EXPANSION': None,
    'APIS_SORTER': None,
    'OPERATIONS_SORTER': None,
    'JSON_EDITOR': False,
    'SHOW_REQUEST_HEADERS': False,
    'SUPPORTED_SUBMIT_METHODS': [
        'get',
        'post',
        'put',
        'delete',
        'patch'
    ],
    'VALIDATOR_URL': '',
    'ACCEPT_HEADER_VERSION': None,  # e.g. '1.0'
    'CUSTOM_HEADERS': {}  # A dictionary of key/vals to override headers
}

# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
FILE_URL = "/file/"
UPGRADE_URL = "/upgrade/"
if sys.platform == "win32":
    FILE_ROOT = os.path.join(BASE_DIR, 'file')
    UPGRADE_ROOT = os.path.join(BASE_DIR, "upgrade")
    STATIC_ROOT = os.path.join(BASE_DIR, 'static')
else:
    FILE_ROOT = '/file/'
    UPGRADE_ROOT = '/upgrade/'
    STATIC_ROOT = '/static/'
SITE_ID = 1
APPEND_SLASH = False
ALLOWED_HOSTS = ['*']
if sys.platform == "win32":
    LOG_PATH = os.path.join(BASE_DIR, os.pardir)
else:
    LOG_PATH = "/var/log/idaas/pandora"
    os.makedirs(LOG_PATH, exist_ok=True)

POD = os.environ.get('POD_NAME')

if POD:
    DB_LOG_NAME = "db_{}.log".format(POD)
    GENERAL_LOG_NAME = "pandora_{}.log".format(POD)
    URL_LOG_NAME = "pandora_url_{}.log".format(POD)

else:
    DB_LOG_NAME = "db.log"
    GENERAL_LOG_NAME = "pandora.log"
    URL_LOG_NAME = "pandora_url.log"

LOGGING = {
    'version': 1,   
    'disable_existing_loggers': False,
    'filters': {
        'require_debug_true': {
            '()': 'django.utils.log.RequireDebugTrue',
        },
        'require_debug_false': {
            '()': 'django.utils.log.RequireDebugFalse',
        },
    },
    'formatters': {
        'verbose': {
            'format': '[%(levelname)s] %(asctime)s.%(msecs).3d %(filename)s(%(lineno)s)/%(funcName)s : %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'simple': {
            'format': '[%(levelname)s] %(asctime)s.%(msecs).3d : %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
        'gather': {
            'format': '[%(asctime)s.%(msecs).3d]: %(message)s',
            'datefmt': '%Y-%m-%d %H:%M:%S'
        },
    },
    'handlers': {
        'console': {
            'level': 'DEBUG',
            'filters': ['require_debug_true'],
            'class': 'logging.StreamHandler',
        },
        'db': {
            'level': 'DEBUG',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOG_PATH, DB_LOG_NAME),
            'maxBytes': 100 * 1024 * 1024,  # 100M
            'backupCount': 4,
            'formatter': 'verbose',
        },
        'general': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'filename': os.path.join(LOG_PATH, GENERAL_LOG_NAME),
            'maxBytes': 100 * 1024 * 1024,  # 100M
            'backupCount': 4,
            'formatter': 'verbose',
        },
        'url': {
            'level': 'INFO',
            'class': 'logging.handlers.RotatingFileHandler',
            'formatter': 'simple',
            'filename': os.path.join(LOG_PATH, URL_LOG_NAME),
            'maxBytes': 100 * 1024 * 1024,  # 10M
            'backupCount': 2,
        },
    },
    'loggers': {
        '': {
            'handlers': ['general', ],
            'level': 'INFO',
        },
        'django.db.backends': {
            'level': 'DEBUG' if DEBUG else 'ERROR',
            'handlers': ['db'],
            'propagate': False,
        },
        'django.request': {
            'handlers': ['general'],
            'level': 'ERROR',
            'propagate': False,
        },
        'django.server': {
            'handlers': ['general', 'console'],
            'level': 'INFO',
            'propagate': False,
        },
        'pandora.core.handler': {
            'handlers': ['url'],
            'level': 'INFO',
            'propagate': False
        },
    }
}
DATA_UPLOAD_MAX_NUMBER_FIELDS = None
FILE_UPLOAD_MAX_MEMORY_SIZE = 314572800
